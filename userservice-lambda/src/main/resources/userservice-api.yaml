openapi: 3.0.3
info:
  title: Swagger Petstore - OpenAPI 3.0
  description: |-
    This is a sample Pet Store Server based on the OpenAPI 3.0 specification.  You can find out more about
    Swagger at [https://swagger.io](https://swagger.io). In the third iteration of the pet store, we've switched to the design first approach!
    You can now help us improve the API whether it's by making changes to the definition itself or to the code.
    That way, with time, we can improve the API in general, and expose some of the new features in OAS3.

    _If you're looking for the Swagger 2.0/OAS 2.0 version of Petstore, then click [here](https://editor.swagger.io/?url=https://petstore.swagger.io/v2/swagger.yaml). Alternatively, you can load via the `Edit > Load Petstore OAS 2.0` menu option!_
    
    Some useful links:
    - [The Pet Store repository](https://github.com/swagger-api/swagger-petstore)
    - [The source API definition for the Pet Store](https://github.com/swagger-api/swagger-petstore/blob/master/src/main/resources/openapi.yaml)
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.0
servers:
  - url: https://petstore3.swagger.io/api/v3
tags:
  - name: sync
    description: Sync APIs. Might fail if there is no contingent anymore or any other technical issues.
  - name: async
    description: Async API. Drop requests and periodically ask for updates or connect via websockets.
paths:
  /sync/gpt:
    get:
      tags:
        - sync
      summary: Ask GPT something with respect to your own documents.
      description: Send a request to GPT + use data from your own index. Will call a different service.
      operationId: getAnswerFromGpt
      parameters:
        - name: question
          required: true
          in: query
          schema:
            type: string
      responses:
        '200':
          description: Did send request to GPT successful + got response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GptResponse'
        '400':
          description: Invalid Question
        '500':
          description: Something went really wrong or quota exceeded...

components:
  schemas:
    GptResponse:
      type: object
      properties:
        summary:
          type: string
          description: gpt response summary
        sources:
          type: array
          items:
            $ref: '#/components/schemas/GptSource'
    GptSource:
      type: object
      properties:
        sourceText:
          type: string
        documentId:
          type: string
        similarityScore:
          type: number